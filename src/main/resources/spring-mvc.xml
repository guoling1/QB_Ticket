<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd">
    <!-- 注解支持 -->
    <task:annotation-driven />
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
    <context:component-scan base-package="com.jkm" />
    <context:annotation-config />
    <mvc:annotation-driven />
    <!-- 将多个配置文件读取到容器中，交给Spring管理 -->
    <bean id="propertyMqConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:mq.properties</value>
            </list>
        </property>
    </bean>
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />
    </bean>

    <mvc:interceptors>
        <!-- 使用bean定义一个Interceptor，直接定义在mvc:interceptors根下面的Interceptor将拦截所有的请求 -->
        <bean class="com.jkm.interceptor.BaseControllerInterceptor"/>
    </mvc:interceptors>

    <!--freeMarker-->
    <bean id="viewResolver"
          class="com.jkm.controller.common.MultiViewResolver">
        <property name="defaultViewResolver" ref="beanNameViewResolver" />
        <property name="viewResolverMap">
            <map>
                <entry>
                    <key>
                        <set>
                            <value>.jsp</value>
                        </set>
                    </key>
                    <ref bean="jspViewResolver" />
                </entry>
                <entry>
                    <key>
                        <value>.html</value>
                    </key>
                    <ref bean="freeMarkerViewResolver" />
                </entry>
            </map>
        </property>
    </bean>
    <bean id="beanNameViewResolver"
          class="org.springframework.web.servlet.view.BeanNameViewResolver" />
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!--<property name="suffix" value=".jsp" />-->
    </bean>
    <!-- 视图解析：freeMarker -->
    <bean id="freeMarkerViewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true" />
        <property name="prefix" value="" />
        <!--<property name="suffix" value=".html" />-->
        <property name="contentType" value="text/html;charset=UTF-8"></property>
        <property name="requestContextAttribute" value="request" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <property name="exposeRequestAttributes" value="true" />
        <property name="exposeSessionAttributes" value="true" />
    </bean>
    <bean id="freemarkerConfig"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/view/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">#</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="datetime_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>
    <!--<bean class="com.jkm.util.BeanUtils" scope="singleton"/>
    &lt;!&ndash;消费端&ndash;&gt;
    <bean id="consumer" class="com.aliyun.openservices.ons.api.bean.ConsumerBean"
          init-method="start" destroy-method="shutdown">
        <property name="properties">
            <map>
                <entry key="ConsumerId" value="${mq.consumerId}"/>
                <entry key="AccessKey" value="${mq.accessKey}"/>
                <entry key="SecretKey" value="${mq.secretKey}"/>
                <entry key="ONSAddr" value="${mq.onsaddr}"/>
            </map>
        </property>

        <property name="subscriptionTable">
            <map>
                <entry value-ref="messageListener">
                    <key>
                        <bean class="com.aliyun.openservices.ons.api.bean.Subscription">
                            <property name="topic" value="${mq.topic}"/> &lt;!&ndash; Topic,请替换 &ndash;&gt;
                            <property name="expression" value="*"/>&lt;!&ndash; MessageType名: 多个messageType 用 “||”分割 &ndash;&gt;
                        </bean>
                    </key>
                </entry>
                &lt;!&ndash;<entry value-ref="MessageListenerOfExpiredOrder">&ndash;&gt;
                    &lt;!&ndash;<key>&ndash;&gt;
                        &lt;!&ndash;<bean class="com.aliyun.openservices.ons.api.bean.Subscription">&ndash;&gt;
                            &lt;!&ndash;<property name="topic" value="${mq.topic}"/> &lt;!&ndash; Topic,请替换 &ndash;&gt;&ndash;&gt;
                            &lt;!&ndash;<property name="expression" value="ticketCancelExpiredOrder||ticketCancelExpiredGrabOrder||noPackageWaitRefund"/>&lt;!&ndash; MessageType名: 多个messageType 用 “||”分割 &ndash;&gt;&ndash;&gt;
                        &lt;!&ndash;</bean>&ndash;&gt;
                    &lt;!&ndash;</key>&ndash;&gt;
                &lt;!&ndash;</entry>&ndash;&gt;
                &lt;!&ndash;<entry value-ref="messageListenerOfOrderRefund">&ndash;&gt;
                    &lt;!&ndash;<key>&ndash;&gt;
                        &lt;!&ndash;<bean class="com.aliyun.openservices.ons.api.bean.Subscription">&ndash;&gt;
                            &lt;!&ndash;<property name="topic" value="${mq.topic}"/> &lt;!&ndash; Topic,请替换 &ndash;&gt;&ndash;&gt;
                            &lt;!&ndash;<property name="expression" value="ticketHandleRefundOrderResult"/>&lt;!&ndash; MessageType名: 多个messageType 用 “||”分割 &ndash;&gt;&ndash;&gt;
                        &lt;!&ndash;</bean>&ndash;&gt;
                    &lt;!&ndash;</key>&ndash;&gt;
                &lt;!&ndash;</entry>&ndash;&gt;
                &lt;!&ndash;<entry value-ref="messageListenerTicketRefundImpl">&ndash;&gt;
                    &lt;!&ndash;<key>&ndash;&gt;
                        &lt;!&ndash;<bean class="com.aliyun.openservices.ons.api.bean.Subscription">&ndash;&gt;
                            &lt;!&ndash;<property name="topic" value="${mq.topic}"/> &lt;!&ndash; Topic,请替换 &ndash;&gt;&ndash;&gt;
                            &lt;!&ndash;<property name="expression" value="returnTicketRefundIng"/>&lt;!&ndash; MessageType名: 多个messageType 用 “||”分割 &ndash;&gt;&ndash;&gt;
                        &lt;!&ndash;</bean>&ndash;&gt;
                    &lt;!&ndash;</key>&ndash;&gt;
                &lt;!&ndash;</entry>&ndash;&gt;
                &lt;!&ndash;<entry value-ref="messageListenerTGrabPartRefundImpl">&ndash;&gt;
                    &lt;!&ndash;<key>&ndash;&gt;
                        &lt;!&ndash;<bean class="com.aliyun.openservices.ons.api.bean.Subscription">&ndash;&gt;
                            &lt;!&ndash;<property name="topic" value="${mq.topic}"/> &lt;!&ndash; Topic,请替换 &ndash;&gt;&ndash;&gt;
                            &lt;!&ndash;<property name="expression" value="grabTicketRefundPart"/>&lt;!&ndash; MessageType名: 多个messageType 用 “||”分割 &ndash;&gt;&ndash;&gt;
                        &lt;!&ndash;</bean>&ndash;&gt;
                    &lt;!&ndash;</key>&ndash;&gt;
                &lt;!&ndash;</entry>&ndash;&gt;
                &lt;!&ndash;<entry value-ref="messageListenerTGrabAllRefundImpl">&ndash;&gt;
                    &lt;!&ndash;<key>&ndash;&gt;
                        &lt;!&ndash;<bean class="com.aliyun.openservices.ons.api.bean.Subscription">&ndash;&gt;
                            &lt;!&ndash;<property name="topic" value="${mq.topic}"/> &lt;!&ndash; Topic,请替换 &ndash;&gt;&ndash;&gt;
                            &lt;!&ndash;<property name="expression" value="grabTicketRefundAll"/>&lt;!&ndash; MessageType名: 多个messageType 用 “||”分割 &ndash;&gt;&ndash;&gt;
                        &lt;!&ndash;</bean>&ndash;&gt;
                    &lt;!&ndash;</key>&ndash;&gt;
                &lt;!&ndash;</entry>&ndash;&gt;
            </map>

        </property>
    </bean>

    &lt;!&ndash; 快捷支付消息处理器 &ndash;&gt;
    <bean id="messageListener" class="com.jkm.controller.common.MessageListenerImpl"/>

    &lt;!&ndash;&lt;!&ndash; 处理过了支付时间的订单的消息处理器 &ndash;&gt;&ndash;&gt;
    &lt;!&ndash;<bean id="MessageListenerOfExpiredOrder" class="com.jkm.controller.common.MessageListenerOfExpiredOrderImpl"/>&ndash;&gt;

    &lt;!&ndash;&lt;!&ndash; 处理订单退款在请求中的消息处理器 &ndash;&gt;&ndash;&gt;
    &lt;!&ndash;<bean id="messageListenerOfOrderRefund" class="com.jkm.controller.common.MessageListenerOfOrderRefundImpl"/>&ndash;&gt;

    &lt;!&ndash;&lt;!&ndash; 处理退票时退款在请求中的消息处理器 &ndash;&gt;&ndash;&gt;
    &lt;!&ndash;<bean id="messageListenerTicketRefundImpl" class="com.jkm.controller.common.MessageListenerTicketRefundImpl"/>&ndash;&gt;

    &lt;!&ndash;&lt;!&ndash; 处理抢票单部分退款的消息 &ndash;&gt;&ndash;&gt;
    &lt;!&ndash;<bean id="messageListenerTGrabPartRefundImpl" class="com.jkm.controller.common.MessageListenerTGrabPartRefundImpl"/>&ndash;&gt;

    &lt;!&ndash;&lt;!&ndash; 处理抢票单全额退款的消息 &ndash;&gt;&ndash;&gt;
    &lt;!&ndash;<bean id="messageListenerTGrabAllRefundImpl" class="com.jkm.controller.common.MessageListenerTGrabAllRefundImpl"/>&ndash;&gt;
    &lt;!&ndash;生产端&ndash;&gt;
    <bean id="producer" class="com.aliyun.openservices.ons.api.bean.ProducerBean"
          init-method="start" destroy-method="shutdown">
        <property name="properties">
            <map>
                <entry key="ProducerId" value="${mq.producerId}" /> &lt;!&ndash; PID,请替换 &ndash;&gt;
                <entry key="AccessKey" value="${mq.accessKey}" /> &lt;!&ndash; ACCESS_KEY,请替换 &ndash;&gt;
                <entry key="SecretKey" value="${mq.secretKey}" /> &lt;!&ndash; SECRET_KEY,请替换 &ndash;&gt;
                <entry key="ONSAddr" value="${mq.onsaddr}"/>
            </map>
        </property>
    </bean>-->
</beans>